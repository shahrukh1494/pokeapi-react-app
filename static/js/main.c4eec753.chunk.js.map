{"version":3,"sources":["components/PokeDetails.js","components/Pagination.js","components/PokeList.js","components/Listing.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["PokeDetails","useState","error","setError","name","setName","image","setImage","abilityDetails","setAbilityDetails","height","setHeight","weight","setWeight","moves","setMoves","id","useParams","useEffect","fetch","then","response","json","sprites","other","dream_world","front_default","abilities","catch","err","console","log","className","src","alt","map","detail","ability","moveName","move","style","margin","textShadow","to","Pagination","pageCount","currentPage","paginate","paginateNext","paginatePrev","pages","i","push","onClick","number","PokeList","pokeList","setPokeList","setPageCount","offset","setOffSet","limit","setCurrentPage","results","Math","ceil","count","pokemon","index","marginLeft","marginRight","nextNumber","prevNumber","Listing","basename","process","exact","path","component","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAuEeA,EApEK,WAAO,IAAD,EACEC,oBAAS,GADX,mBACjBC,EADiB,KACVC,EADU,OAEAF,mBAAS,IAFT,mBAEjBG,EAFiB,KAEXC,EAFW,OAGEJ,qBAHF,mBAGjBK,EAHiB,KAGVC,EAHU,OAIoBN,mBAAS,IAJ7B,mBAIjBO,EAJiB,KAIDC,EAJC,OAKIR,mBAAS,IALb,mBAKjBS,EALiB,KAKTC,EALS,OAMIV,mBAAS,IANb,mBAMjBW,EANiB,KAMTC,EANS,OAOEZ,mBAAS,IAPX,mBAOjBa,EAPiB,KAOVC,EAPU,KAQhBC,EAAOC,cAAPD,GAmBR,OAjBAE,qBAAU,WACRC,MAAM,qCAAD,OAAsCH,EAAtC,MACFI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLd,EAASc,EAASE,QAAQC,MAAMC,YAAYC,eAC5CrB,EAAQgB,EAASjB,MACjBK,EAAkBY,EAASM,WAC3BhB,EAAUU,EAASX,QACnBG,EAAUQ,EAAST,QACnBG,EAASM,EAASP,UAEnBc,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZ1B,GAAS,QAEZ,CAACa,IAGF,gCACGd,EACC,6BACE,oBAAI8B,UAAU,QAAd,wCAGF,qBAAIA,UAAU,eAAd,UACE,qBAAIA,UAAU,UAAd,4BAAwC5B,KACxC,qBAAK4B,UAAU,QAAQC,IAAK3B,EAAO4B,IAAI,YACvC,qBAAIF,UAAU,UAAd,wBAEGxB,EAAe2B,KAAI,SAACC,GAAD,OAClB,qCAAkCA,EAAOC,QAAQjC,KAAjD,MAAWgC,EAAOC,QAAQjC,YAG9B,qBAAI4B,UAAU,UAAd,sBAAkCtB,KAClC,qBAAIsB,UAAU,UAAd,sBAAkCpB,KAClC,qBAAIoB,UAAU,UAAd,oBAEE,6BACGlB,EAAMqB,KAAI,SAACG,GAAD,OACT,oBAA6BN,UAAU,gBAAvC,SACGM,EAASC,KAAKnC,MADRkC,EAASC,KAAKnC,iBAQjC,6BACE,6BACE,cAAC,IAAD,CAAMoC,MAAO,CAAEC,OAAQ,OAAQC,WAAY,QAAUC,GAAG,IAAxD,6BCoBKC,EAhFI,SAAC,GAMb,IALLC,EAKI,EALJA,UACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,aACAC,EACI,EADJA,aAEMC,EAAQ,GACd,GAAIJ,EAAc,EAChB,IAAK,IAAIK,EAAI,EAAGA,GAAK,EAAGA,IACtBD,EAAME,KAAKD,QAER,GAAIL,EAAcD,EAAY,EACnC,IAAK,IAAIM,EAAIN,EAAY,EAAGM,GAAKN,EAAWM,IAC1CD,EAAME,KAAKD,QAGb,IAAK,IAAIA,EAAIL,EAAc,EAAGK,GAAKL,EAAc,EAAGK,IAClDD,EAAME,KAAKD,GAIf,OACE,8BACE,sBAAKnB,UAAU,aAAf,UACGc,EAAc,GACb,qCACE,wBACEO,QAAS,WACPN,EAAS,IAFb,mBAOA,wBACEM,QAAS,WACPJ,EAAaH,EAAc,IAF/B,qBAUHI,EAAMf,KAAI,SAACmB,GAAD,OACT,8BACE,wBACEtB,UAAWsB,IAAWR,EAAc,SAAW,GAC/CO,QAAS,WACPN,EAASO,IAHb,SAMGA,KAPKA,MAYXR,IAAgBD,GACf,qCACE,wBACEQ,QAAS,WACPL,EAAaF,EAAc,IAF/B,kBAOA,wBACEO,QAAS,WACPN,EAASF,IAFb,2BCGGU,EAnEE,WAAO,IAAD,EACWtD,mBAAS,IADpB,mBACduD,EADc,KACJC,EADI,OAEaxD,mBAAS,MAFtB,mBAEd4C,EAFc,KAEHa,EAFG,OAGOzD,mBAAS,GAHhB,mBAGd0D,EAHc,KAGNC,EAHM,KAIfC,EAAQ,GAJO,EAKiB5D,mBAAS0D,EAASE,EAAQ,GAL3C,mBAKdf,EALc,KAKDgB,EALC,KAOrB5C,qBAAU,WACRC,MAAM,4CAAD,OAA6CwC,EAA7C,kBAA6DE,IAC/DzC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLoC,EAAYpC,EAAS0C,SACrBL,EAAaM,KAAKC,KAAK5C,EAAS6C,MAAQL,OAEzCjC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,CAAC8B,IAiBJ,OACE,gCACE,6BACGH,EAASrB,KAAI,SAACgC,EAASC,GAAV,OACZ,qBAAuBpC,UAAU,WAAjC,UACuB,IAAnBc,EAAc,GAAUsB,EAAQ,EADpC,oBACwDD,EAAQ/D,KAC9D,sBAAK4B,UAAU,YAAf,kBAEE,cAAC,IAAD,CACEQ,MAAO,CACLE,WAAY,OACZ2B,WAAY,OACZC,YAAa,QAEf3B,GAAE,mBAAkC,IAAnBG,EAAc,GAAUsB,EAAQ,GANnD,kBAFF,oBAFOD,EAAQ/D,WAoBrB,cAAC,EAAD,CACEyC,UAAWA,EACXC,YAAaA,EACbC,SA1CW,SAACO,GAChBM,GAAWN,EAAS,GAAKO,GACzBC,EAAeR,IAyCXN,aAtCe,SAACuB,GACpBX,GAAWW,EAAa,GAAKV,GAC7BC,EAAeS,IAqCXtB,aAlCe,SAACuB,GACpBZ,GAAWY,EAAa,GAAKX,GAC7BC,EAAeU,UClBJC,EAXC,WACd,OACE,cAAC,IAAD,CAAQC,SAAUC,qBAAlB,SACE,gCACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvB,IACjC,cAAC,IAAD,CAAOsB,KAAK,eAAeC,UAAW9E,UCD/B+E,EARA,WACX,OACI,qBAAK/C,UAAU,SAAf,SACQ,gDCSDgD,MATf,WACE,OACE,sBAAKhD,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCKSiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/D,MAAK,YAAkD,IAA/CgE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c4eec753.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nconst PokeDetails = () => {\r\n  const [error, setError] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [image, setImage] = useState();\r\n  const [abilityDetails, setAbilityDetails] = useState([]);\r\n  const [height, setHeight] = useState(\"\");\r\n  const [weight, setWeight] = useState(\"\");\r\n  const [moves, setMoves] = useState([]);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetch(`https://pokeapi.co/api/v2/pokemon/${id}/`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setImage(response.sprites.other.dream_world.front_default);\r\n        setName(response.name);\r\n        setAbilityDetails(response.abilities);\r\n        setHeight(response.height);\r\n        setWeight(response.weight);\r\n        setMoves(response.moves);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setError(true);\r\n      });\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      {error ? (\r\n        <ul>\r\n          <li className=\"error\">Sorry, Details Not Found</li>\r\n        </ul>\r\n      ) : (\r\n        <ul className=\"details-list\">\r\n          <li className=\"details\">Pokemon Name : {name}</li>\r\n          <img className=\"image\" src={image} alt=\"Pokemon\" />\r\n          <li className=\"details\">\r\n            Abilities :\r\n            {abilityDetails.map((detail) => (\r\n              <span key={detail.ability.name}> {detail.ability.name} </span>\r\n            ))}\r\n          </li>\r\n          <li className=\"details\">Height : {height}</li>\r\n          <li className=\"details\">Weight : {weight}</li>\r\n          <li className=\"details\">\r\n            Moves :\r\n            <ul>\r\n              {moves.map((moveName) => (\r\n                <li key={moveName.move.name} className=\"details moves\">\r\n                  {moveName.move.name}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      )}\r\n      <ul>\r\n        <li>\r\n          <Link style={{ margin: \"auto\", textShadow: \"none\" }} to=\"/\">\r\n            Go Back\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokeDetails;\r\n","import React from \"react\";\r\n\r\nconst Pagination = ({\r\n  pageCount,\r\n  currentPage,\r\n  paginate,\r\n  paginateNext,\r\n  paginatePrev,\r\n}) => {\r\n  const pages = [];\r\n  if (currentPage < 5) {\r\n    for (let i = 1; i <= 9; i++) {\r\n      pages.push(i);\r\n    }\r\n  } else if (currentPage > pageCount - 5) {\r\n    for (let i = pageCount - 8; i <= pageCount; i++) {\r\n      pages.push(i);\r\n    }\r\n  } else {\r\n    for (let i = currentPage - 4; i <= currentPage + 4; i++) {\r\n      pages.push(i);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"pagination\">\r\n        {currentPage > 1 && (\r\n          <>\r\n            <button\r\n              onClick={() => {\r\n                paginate(1);\r\n              }}\r\n            >\r\n              First\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                paginatePrev(currentPage - 1);\r\n              }}\r\n            >\r\n              &laquo;\r\n            </button>\r\n          </>\r\n        )}\r\n\r\n        {pages.map((number) => (\r\n          <div key={number}>\r\n            <button\r\n              className={number === currentPage ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                paginate(number);\r\n              }}\r\n            >\r\n              {number}\r\n            </button>\r\n          </div>\r\n        ))}\r\n\r\n        {currentPage !== pageCount && (\r\n          <>\r\n            <button\r\n              onClick={() => {\r\n                paginateNext(currentPage + 1);\r\n              }}\r\n            >\r\n              &raquo;\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                paginate(pageCount);\r\n              }}\r\n            >\r\n              Last\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nconst PokeList = () => {\r\n  const [pokeList, setPokeList] = useState([]);\r\n  const [pageCount, setPageCount] = useState(null);\r\n  const [offset, setOffSet] = useState(0);\r\n  const limit = 10;\r\n  const [currentPage, setCurrentPage] = useState(offset / limit + 1);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://pokeapi.co/api/v2/pokemon?offset=${offset}&limit=${limit}`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setPokeList(response.results);\r\n        setPageCount(Math.ceil(response.count / limit));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [offset]);\r\n\r\n  const paginate = (number) => {\r\n    setOffSet((number - 1) * limit);\r\n    setCurrentPage(number);\r\n  };\r\n\r\n  const paginateNext = (nextNumber) => {\r\n    setOffSet((nextNumber - 1) * limit);\r\n    setCurrentPage(nextNumber);\r\n  };\r\n\r\n  const paginatePrev = (prevNumber) => {\r\n    setOffSet((prevNumber - 1) * limit);\r\n    setCurrentPage(prevNumber);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {pokeList.map((pokemon, index) => (\r\n          <li key={pokemon.name} className=\"pokename\">\r\n            {(currentPage - 1) * 10 + index + 1}. Pokemon Name : {pokemon.name}\r\n            <div className=\"pokelinks\">\r\n              click\r\n              <Link\r\n                style={{\r\n                  textShadow: \"none\",\r\n                  marginLeft: \"10px\",\r\n                  marginRight: \"10px\",\r\n                }}\r\n                to={`/details/${(currentPage - 1) * 10 + index + 1}`}\r\n              >\r\n                here\r\n              </Link>\r\n              to know more\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <Pagination\r\n        pageCount={pageCount}\r\n        currentPage={currentPage}\r\n        paginate={paginate}\r\n        paginateNext={paginateNext}\r\n        paginatePrev={paginatePrev}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokeList;\r\n","import { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport PokeDetails from \"./PokeDetails\";\r\nimport PokeList from \"./PokeList\";\r\n\r\nconst Listing = () => {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <div>\r\n        <Route exact path=\"/\" component={PokeList} />\r\n        <Route path=\"/details/:id\" component={PokeDetails}></Route>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Listing;\r\n","const Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n                <h1>Pokemon App</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import Listing from \"./components/Listing\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <Listing />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}